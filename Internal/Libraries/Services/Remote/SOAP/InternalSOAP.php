<?php namespace ZN\Services\Remote;

use SoapClient, Arrays, XML;

class InternalSOAP implements InternalSOAPInterface
{
    //--------------------------------------------------------------------------------------------------------
    //
    // Author     : Ozan UYKUN <ozanbote@gmail.com>
    // Site       : www.znframework.com
    // License    : The MIT License
    // Copyright  : (c) 2012-2016, znframework.com
    //
    //--------------------------------------------------------------------------------------------------------

    //--------------------------------------------------------------------------------------------------------
    // Create WSDL
    //--------------------------------------------------------------------------------------------------------
    //
    // @var array
    //
    //--------------------------------------------------------------------------------------------------------
    protected $createWSDL = [];

    //--------------------------------------------------------------------------------------------------------
    // Methods
    //--------------------------------------------------------------------------------------------------------
    //
    // @var array
    //
    //--------------------------------------------------------------------------------------------------------
    protected $methods =
    [
        'dorequest'      , 'getfunctions'          , 'getlastrequest', 'getlastrequestheaders',
        'getlastresponse', 'getlastresponseheaders', 'gettypes'      , 'setcookie',
        'setlocation'    , 'setsoapheaders'        , 'soapcall'
    ];

    //--------------------------------------------------------------------------------------------------------
    // Magic Call
    //--------------------------------------------------------------------------------------------------------
    //
    // @param string $method
    // @param array  $parameters
    //
    //--------------------------------------------------------------------------------------------------------
    public function __call($method, $parameters)
    {
        if( Arrays::valueExists($this->methods, strtolower($method)) )
        {
            $method = '__' . $method;

            return $this->client->$method(...$parameters);
        }

        return $this->client->$method(...$parameters);
    }

    //--------------------------------------------------------------------------------------------------------
    // Message
    //--------------------------------------------------------------------------------------------------------
    //
    // @param array ...$param
    //
    //--------------------------------------------------------------------------------------------------------
    public function _element($type, $param)
    {
        foreach( $param as $p )
        {
            $this->createWSDL[] =
            [
                'name'      => $type,
                'attr'      => $p['attr']    ?? [],
                'content'   => $p['content'] ?? NULL,
                'child'     => $p['child']   ?? NULL
            ];
        }
    }

    //--------------------------------------------------------------------------------------------------------
    // Message
    //--------------------------------------------------------------------------------------------------------
    //
    // @param array ...$param
    //
    //--------------------------------------------------------------------------------------------------------
    public function message(...$param) : InternalSOAP
    {
        $this->_element('message', $param);

        return $this;
    }

    //--------------------------------------------------------------------------------------------------------
    // Message
    //--------------------------------------------------------------------------------------------------------
    //
    // @param array ...$param
    //
    //--------------------------------------------------------------------------------------------------------
    public function types(...$param) : InternalSOAP
    {
        $this->_element('types', $param);

        return $this;
    }

    //--------------------------------------------------------------------------------------------------------
    // Message
    //--------------------------------------------------------------------------------------------------------
    //
    // @param array ...$param
    //
    //--------------------------------------------------------------------------------------------------------
    public function portType(...$param) : InternalSOAP
    {
        $this->_element('portType', $param);

        return $this;
    }

    //--------------------------------------------------------------------------------------------------------
    // Message
    //--------------------------------------------------------------------------------------------------------
    //
    // @param array ...$param
    //
    //--------------------------------------------------------------------------------------------------------
    public function binding(...$param) : InternalSOAP
    {
        $this->_element('binding', $param);

        return $this;
    }

    //--------------------------------------------------------------------------------------------------------
    // Create WSDL
    //--------------------------------------------------------------------------------------------------------
    //
    // @param string $method
    // @param array  $parameters
    //
    //--------------------------------------------------------------------------------------------------------
    public function createWSDL(Array $data = [])
    {
        return XML::build(
        [
            'name'  => 'definitions',
            'child' => $this->createWSDL
        ]);
    }

    //--------------------------------------------------------------------------------------------------------
    // WSDL Cache Enabled
    //--------------------------------------------------------------------------------------------------------
    //
    // @param bool $open = true
    //
    //--------------------------------------------------------------------------------------------------------
    public function cache(Bool $open = true) : InternalSOAP
    {
        ini_set('soap.wsdl_cache_enabled', $open);

        return $this;
    }

    //--------------------------------------------------------------------------------------------------------
    // Client
    //--------------------------------------------------------------------------------------------------------
    //
    // @param string $url
    // @param array  $options
    //
    //--------------------------------------------------------------------------------------------------------
    public function client(String $url, Array $options = []) : SoapClient
    {
        return $this->client = new SoapClient($url, $options);
    }
}
