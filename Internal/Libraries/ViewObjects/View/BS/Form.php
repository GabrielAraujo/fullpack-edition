<?php namespace ZN\ViewObjects\View\BS;

use Buffer, Html, Form;

class Forms implements FormInterface
{
    //--------------------------------------------------------------------------------------------------------
    //
    // Author     : Ozan UYKUN <ozanbote@gmail.com>
    // Site       : www.znframework.com
    // License    : The MIT License
    // Copyright  : (c) 2012-2016, znframework.com
    //
    //--------------------------------------------------------------------------------------------------------

    //--------------------------------------------------------------------------------------------------------
    // Label
    //--------------------------------------------------------------------------------------------------------
    //
    // @var string
    //
    //--------------------------------------------------------------------------------------------------------
    protected $label;

    //--------------------------------------------------------------------------------------------------------
    // Label
    //--------------------------------------------------------------------------------------------------------
    //
    // @param string $label
    //
    //--------------------------------------------------------------------------------------------------------
    public function label(String $label) : Forms
    {
        $this->label = $label;

        return $this;
    }

    //--------------------------------------------------------------------------------------------------------
    // Text
    //--------------------------------------------------------------------------------------------------------
    //
    // @param string $name  = NULL
    // @param string $value = NULL
    // @param array  $attr  = []
    //
    //--------------------------------------------------------------------------------------------------------
    public function text(String $name = NULL, String $value = NULL, Array $attr = [], $type = 'text')
    {
        echo $this->_group
        (
            HT . HT . Html::label('', $this->label) . Form::class('form-control')->$type($name, $value, $attr)
        ) . EOL;

        $this->label = NULL;
    }

    //--------------------------------------------------------------------------------------------------------
    // Password
    //--------------------------------------------------------------------------------------------------------
    //
    // @param string $name  = NULL
    // @param string $value = NULL
    // @param array  $attr  = []
    //
    //--------------------------------------------------------------------------------------------------------
    public function password(String $name = NULL, String $value = NULL, Array $attr = [])
    {
        $this->text($name, $value, $attr, 'password');
    }

    //--------------------------------------------------------------------------------------------------------
    // Textarea
    //--------------------------------------------------------------------------------------------------------
    //
    // @param string $name  = NULL
    // @param string $value = NULL
    // @param array  $attr  = []
    //
    //--------------------------------------------------------------------------------------------------------
    public function textarea(String $name = NULL, String $value = NULL, Array $attr = [])
    {
        $this->text($name, $value, $attr, 'textarea');
    }

    //--------------------------------------------------------------------------------------------------------
    // Select
    //--------------------------------------------------------------------------------------------------------
    //
    // @param string $name  = NULL
    // @param string $value = NULL
    // @param array  $attr  = []
    //
    //--------------------------------------------------------------------------------------------------------
    public function select(String $name = NULL, Array $options = [], $key = NULL, Array $attr = [])
    {
        echo $this->_group
        (
            HT . HT . Html::label('', $this->label) . Form::class('form-control')->select($name, $options, $key, $attr)
        ) . EOL;

        $this->label = NULL;
    }

    //--------------------------------------------------------------------------------------------------------
    // Checkbox
    //--------------------------------------------------------------------------------------------------------
    //
    // @param string $name  = NULL
    // @param string $value = NULL
    // @param array  $attr  = []
    //
    //--------------------------------------------------------------------------------------------------------
    public function checkbox(String $name = NULL, String $value = NULL, Array $attr = [], $type = 'check')
    {
        echo $this->_group
        (
            HT . HT . Html::label('', Form::$type($name, $value, $attr) . $this->label)
        ) . EOL;

        $this->label = NULL;
    }

    //--------------------------------------------------------------------------------------------------------
    // Checkbox Inline
    //--------------------------------------------------------------------------------------------------------
    //
    // @param string $name  = NULL
    // @param string $value = NULL
    // @param array  $attr  = []
    //
    //--------------------------------------------------------------------------------------------------------
    public function checkboxInline(String $name = NULL, String $value = NULL, Array $attr = [], $type = 'checkbox')
    {
        echo HT . HT . Html::class($type.'-inline')->label(NULL, Form::$type($name, $value, $attr) . $this->label) . EOL;

        $this->label = NULL;
    }

    //--------------------------------------------------------------------------------------------------------
    // Radio
    //--------------------------------------------------------------------------------------------------------
    //
    // @param string $name  = NULL
    // @param string $value = NULL
    // @param array  $attr  = []
    //
    //--------------------------------------------------------------------------------------------------------
    public function radio(String $name = NULL, String $value = NULL, Array $attr = [])
    {
        $this->checkbox($name, $value, $attr, 'radio');
    }

    //--------------------------------------------------------------------------------------------------------
    // Radio Inline
    //--------------------------------------------------------------------------------------------------------
    //
    // @param string $name  = NULL
    // @param string $value = NULL
    // @param array  $attr  = []
    //
    //--------------------------------------------------------------------------------------------------------
    public function radioInline(String $name = NULL, String $value = NULL, Array $attr = [])
    {
        $this->checkboxInline($name, $value, $attr, 'radio');
    }

    //--------------------------------------------------------------------------------------------------------
    // Type
    //--------------------------------------------------------------------------------------------------------
    //
    // @param string $type = NULL
    //
    //--------------------------------------------------------------------------------------------------------
    public function type(String $type) : Forms
    {
        $this->type = $type;

        return $this;
    }

    //--------------------------------------------------------------------------------------------------------
    // Button
    //--------------------------------------------------------------------------------------------------------
    //
    // @param string $name  = NULL
    // @param string $value = NULL
    // @param array  $attr  = []
    //
    //--------------------------------------------------------------------------------------------------------
    public function button(String $name = NULL, String $value = NULL, Array $attr = [], $type = 'button')
    {
        echo $this->_group
        (
            HT . HT . Html::label('', \BS::type($this->type)->$type($name, $value, $attr) . $this->label)
        ) . EOL;

        $this->label = NULL;
        $this->type  = NULL;
    }

    //--------------------------------------------------------------------------------------------------------
    // Submit
    //--------------------------------------------------------------------------------------------------------
    //
    // @param string $name  = NULL
    // @param string $value = NULL
    // @param array  $attr  = []
    //
    //--------------------------------------------------------------------------------------------------------
    public function submit(String $name = NULL, String $value = NULL, Array $attr = [])
    {
        $this->button($name, $value, $attr, 'submit');
    }

    //--------------------------------------------------------------------------------------------------------
    // Form
    //--------------------------------------------------------------------------------------------------------
    //
    // @param callable $callback
    //
    //--------------------------------------------------------------------------------------------------------
    public function form(Callable $callback) : String
    {
        $return  = '<form'.Html::attributes(Properties::$attr).(Properties::$type ? ' class="form-' . Properties::$type . '"' : NULL).'>' . EOL;
        $return .= Buffer::callback($callback, [$this]);
        $return .= '</form>' . EOL;

        $this->_default();

        return $return;
    }

    //--------------------------------------------------------------------------------------------------------
    // Tab
    //--------------------------------------------------------------------------------------------------------
    //
    // @param string $tabName
    // @param string $content
    //
    //--------------------------------------------------------------------------------------------------------
    protected function _group(String $content = NULL)
    {
        return HT . '<div class="form-group">'. EOL . $content . HT .'</div>';
    }

    //--------------------------------------------------------------------------------------------------------
    // Protected Default
    //--------------------------------------------------------------------------------------------------------
    //
    // @param void
    //
    //--------------------------------------------------------------------------------------------------------
    protected function _default()
    {
        Properties::$type      = NULL;
        Properties::$attr      = NULL;
    }
}
